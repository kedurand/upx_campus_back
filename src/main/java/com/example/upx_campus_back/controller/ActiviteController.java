package com.example.upx_campus_back.controller;

import com.example.upx_campus_back.model.Activite;
import com.example.upx_campus_back.model.Batiment;
import com.example.upx_campus_back.model.Thematique;
import com.example.upx_campus_back.service.ActiviteService;
import com.example.upx_campus_back.service.BatimentService;
import com.example.upx_campus_back.service.ThematiqueService;
import org.omg.PortableInterceptor.ACTIVE;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/*
    Fait le mapping des URL de l'API REST.
    Chaque requête REST va lancer l'action du service associé
*/

@RestController
@RequestMapping ("/activites") //URL will start with it
public class ActiviteController {
    @Autowired // Get the bean called and auto-generated by Spring
    ActiviteService activiteService;

    @GetMapping
    public List<Activite> getActivites(){
        return activiteService.getActivites();
    }

//    @PostMapping
//    public Activite addActivite(@Valid @RequestBody Activite activite){
//        return activiteService.addActivite(activite);
//    }

    @PostMapping
    public Activite addActivite(){
        // Faire des batiments et thématique fictives
        Batiment batiment = new Batiment("UFR Segmi", 24, 12, "C'est un beau batiment", null);
        Set<Batiment> batimentSet = new HashSet<>();
        batimentSet.add(batiment);

        Thematique thematique = new Thematique("Sport", null);
        Set<Thematique> thematiqueSet = new HashSet<>();
        thematiqueSet.add(thematique);

        Activite activite = new Activite("Test", thematiqueSet, batimentSet );
        Set<Activite> activiteSet = new HashSet<>();
        activiteSet.add(activite);

        batiment.setActivites(activiteSet);

        thematique.setActivites(activiteSet);

        return activiteService.addActivite(activite);
    }

    @PutMapping("/{activiteId}")
    public Activite modifyActivite(@PathVariable Long activiteId,
                                   @Valid @RequestBody Activite activiteRequest) {
        return activiteService.modifyActivite(activiteId, activiteRequest);
    }

    @DeleteMapping("/{activiteId}")
    public ResponseEntity<?> deleteActivite(@PathVariable Long activiteId) {
        return activiteService.deleteActivite(activiteId);
    }
}
